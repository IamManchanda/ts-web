{"version":3,"sources":["src/ts/models/User.ts","src/ts/models/index.ts","src/ts/index.ts"],"names":[],"mappings":";;;;;;AEAA,ADAA,ICAA,ADAA,MAAA,ECAA,CDAA,ECAA,KDAA,CAAA,CCAA,CAAA,MDAA,CAAA,GCAA,CAAA;;AAGA,ADHS,ICGH,GDHG,CCGC,ADHD,GCGI,CDHJ,GCGQ,ADHR,MAAA,CAAA,CCGQ,CAAA,IAAJ,CAAS,ADHb;ACIP,EAAA,IAAI,EAAE,UADc;AAEpB,EAAA,GAAG,EAAE;AAFe,CAAT,CAAb;;AAKA,IAAM,iBAAiB,GAAe,SAAhC,iBAAgC,GAAA;AACpC,EAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACD,CAFD;;AAGA,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,iBAAlB;;AAEA,IAAM,iBAAiB,GAAe,SAAhC,iBAAgC,GAAA;AACpC,EAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACD,CAFD;AFXA,IAAA,IAAA;AEcA,AFdA,IEcI,CAAC,EAAL,CAAQ,QAAR,EAAkB,iBAAlB;AFdA,YAAA;AEgBA,AFbE,IEaI,OFbJ,IAAA,CAAoB,IEaA,AFbpB,EAAmC,CEaA,SAA/B,gBAA+B,GAAA;AACnC,AFdoB,EEcpB,OAAO,AFda,CEcZ,GAAR,AFdoB,CEcR,EFdQ,IAAA,YEcpB;AACD,AFjBC,CEeF,QFfE,MAAA,GAAqB,EAArB;AAEuC;AEgBzC,IAAI,CAAC,EAAL,CAAQ,OAAR,EAAiB,gBAAjB;AFdE,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;AEgBtB,AFfI,IEeE,OFfK,KAAK,IEeM,AFfX,CAAU,EEegB,MFf1B,CAAP,EEeE,gBAA+B,GAAA;AACnC,AFfC,EEeD,CFjBA,MEiBO,CAAC,GAAR,CAAY,kBAAZ;AACD,CAFD;AFZE,EAAA,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,MAAJ,EAAqB;AEevB,AFdI,IEcA,CAAC,EAAL,CAAQ,CFdC,IAAL,EEcJ,CFda,CEcI,OFdJ,CAAA,QEcb,AFda,CAAA,EAAA,EAAQ,KAAK,IAAb,CAAA,EAAsB,MAAtB,CAAT;AEgBJ,AFfG,GAFD,CEiBE,CAAC,OAAL,CAAa,QAAb;AACA,IAAI,CAAC,OAAL,CAAa,OAAb;AFdE,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAA0C;AACxC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;AACA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACxC,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACvB,MAAA,QAAQ;AACT,KAFD;AAGD,GAND;;AAOF,SAAA,IAAA;AA1BA,CAAA,EAAA;;AA4BA,OAAA,CAAA,OAAA,GAAe,IAAf","file":"ts.93153e6d.js","sourceRoot":"..","sourcesContent":["import { UserProps, EventsData, NumOrStr, CallbackFn } from \"../ts-utils/\";\n\nclass User {\n  events: EventsData = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): NumOrStr {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    this.data = { ...this.data, ...update };\n  }\n\n  on(eventName: string, callback: CallbackFn): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n    if (!handlers || handlers.length === 0) return;\n    handlers.forEach(callback => {\n      callback();\n    });\n  }\n}\n\nexport default User;\n","export { default as User } from \"./User\";\n","import { User } from \"./models\";\nimport { CallbackFn } from \"./ts-utils\";\n\nconst user = new User({\n  name: \"MS Dhoni\",\n  age: 38,\n});\n\nconst handleUserChange1: CallbackFn = () => {\n  console.log(\"handleUserChange1\");\n};\nuser.on(\"change\", handleUserChange1);\n\nconst handleUserChange2: CallbackFn = () => {\n  console.log(\"handleUserChange2\");\n};\nuser.on(\"change\", handleUserChange2);\n\nconst handleUserClick1: CallbackFn = () => {\n  console.log(\"handleUserClick1\");\n};\nuser.on(\"click\", handleUserClick1);\n\nconst handleUserClick2: CallbackFn = () => {\n  console.log(\"handleUserClick2\");\n};\nuser.on(\"click\", handleUserClick2);\n\nuser.trigger(\"change\");\nuser.trigger(\"click\");\n"]}